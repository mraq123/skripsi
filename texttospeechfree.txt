import { useEffect, useState } from "react";

export const TextToSpeechComponents = () => {
  const [text, setText] = useState("");
  const [voices, setVoices] = useState([]);
  const [selectedVoice, setSelectedVoice] = useState(null);
  const [rate, setRate] = useState(1);
  const [volume, setVolume] = useState(1);
  useEffect(() => {
    const availableVoices = speechSynthesis.getVoices();
    setVoices(availableVoices);
    if (availableVoices.length > 0) {
      setSelectedVoice(availableVoices[0].name);
    }

    // Reload voices when they change
    speechSynthesis.onvoiceschanged = () => {
      const updatedVoices = speechSynthesis.getVoices();
      setVoices(updatedVoices);
      if (updatedVoices.length > 0) {
        setSelectedVoice(updatedVoices[0].name);
      }
    };
  }, []);

  const handleTextChange = (e) => {
    setText(e.target.value);
  };

  const handleVoiceChange = (e) => {
    setSelectedVoice(e.target.value);
  };

  const handleVolumeChange = (e) => {
    setVolume(e.target.value);
  };

  const handleRateChange = (e) => {
    setRate(e.target.value);
  };

  const handleSpeak = () => {
    if (text.trim() !== "") {
      const utterance = new SpeechSynthesisUtterance(text);
      const selectedVoiceObj = voices.find(
        (voice) => voice.name === selectedVoice
      );
      if (selectedVoiceObj) {
        utterance.voice = selectedVoiceObj;
      }
      utterance.rate = rate;
      utterance.volume = volume;
      speechSynthesis.speak(utterance);
    }
  };
  return (
    <div
      className="w-screen h-screen"
      style={{ width: "100vw", height: "auto" }}
    >
      <h2>Text To Speech</h2>
      <textarea
        value={text}
        onChange={handleTextChange}
        placeholder="Enter text here..."
        rows="10"
        cols="50"
      />
      <br />
      <div>
        <label htmlFor="voices">Voice: </label>
        <select id="voices" value={selectedVoice} onChange={handleVoiceChange}>
          {voices.map((voice, index) => (
            <option key={index} value={voice.name}>
              {voice.name} ({voice.lang})
            </option>
          ))}
        </select>
      </div>
      <div>
        <label htmlFor="rate">Rate: </label>
        <input
          id="rate"
          type="range"
          min="0.5"
          max="2"
          step="0.1"
          value={rate}
          onChange={handleRateChange}
        />
      </div>

      <div>
        <label htmlFor="volume">Volume: </label>
        <input
          id="volume"
          type="range"
          min="0"
          max="1"
          step="0.1"
          value={volume}
          onChange={handleVolumeChange}
        />
      </div>
      <button onClick={handleSpeak}>Speak</button>
    </div>
  );
};
